#!/bin/bash

if [[ -z $XDG_DATA_HOME ]]; then
  export XDG_DATA_HOME="$HOME/.local/share"
fi
if [[ -z $XDG_CONFIG_HOME ]]; then
  export XDG_CONFIG_HOME="$HOME/.config"
fi

[[ -f "${XDG_CONFIG_HOME}/zsh/lib/helpers.zsh" ]] && source "${XDG_CONFIG_HOME}/zsh/lib/helpers.zsh"

set -euo pipefail

# -- set some useful vars for executable info:
__dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
__file="${__dir}/$(basename "${BASH_SOURCE[0]}")"
__base="$(basename ${__file} .sh)"
__root="$(cd "$(dirname "${__dir}")" && pwd)"
# shellcheck disable=SC2034,SC2015
__invocation="$(printf %q "${__file}")$( (($#)) && printf ' %q' "$@" || true)"

log "cd'ing to $DOTS.."
pushd "$DOTS" >/dev/null

if [[ "$(uname)" == "Darwin" ]]; then
  # gather sudo privileges:
  log_warn "needs sudo for things:"
  sudo -v
fi

# Keep-alive: update existing `sudo` time stamp until setup has finished
while true; do
  sudo -n true
  sleep 60
  kill -0 "$$" || exit
done 2>/dev/null &

# update steps:
# - submodules
# - dotbot create
# - dotbot link
# - asdf / lib + plugins + default tool plugins + list caches (https://www.notion.so/Droplet-Ubuntu-Upgrade-0bacdb0df2344225b243362982d0c861)
# - homebrew / lib + outdated
# - nvim
# - paq
# - (macos) elixirls
# - (macos) kitty icon update
# - (linux/seth-dev) remote-dev update
# - (linux/seth-dev) dev update

update() {
  log "update git submodules (recursively).." &&
    git submodule update --init --recursive

  log "create missing folders and symlinks.." &&
    ./install --only create link

  if [[ "$(uname)" == "Darwin" ]]; then
    log "update xcode cli tools.."
    # read -n 1 -p "press any key to continue..." -s -e -r
    xcode-select --install & #run command1 in background
    local PID=$!             #catch the last PID, here from command1
    wait $PID                #wait for command1, in background, to end
    # ./bin/xcode-install -f
  fi

  log "homebrew install.." &&
    ./bin/brew-install &&
    ./install --only brewfile

  log "asdf install.." &&
    ./bin/asdf-install

  if [[ "$(uname)" == "Darwin" ]]; then
    log "post-homebrew (remove ruby).." &&
      brew uninstall --ignore-dependencies --force ruby
  fi

  log "neovim install.." && ./bin/nvim-install

  log "paq-nvim install.." &&
    ./bin/paq-install -u

  if [[ "$(uname)" == "Darwin" ]]; then
    log "elixir-ls install.." &&
      ./bin/elixirls-install master

    log "kitty icon update.." &&
      ./config/kitty/update_icon.sh
  fi

  log "github auth login.." &&
    ./bin/gh-login
}

yay() {
  echo
  log_ok "dotfiles update complete."
  echo "â–‘ "
  dotsay "â–‘ ðŸ—¿ @b@yellow[[donesies!]]"
  echo "â–‘ "

  if [[ "$(hostname)" == "seth-dev" ]]; then
    dotsay "â–‘  - since you're on $(hostname), you might want to:"
    echo "â–‘ "
    printf "â–‘   "
    dotsay "   + run @b@blue[[dev update]]"
    echo "â–‘ "
  else
    echo "â–‘ "
    dotsay "â–‘  - nothing more to do."
  fi
}

oops() {
  echo
  log_error "dotfiles update failed!"
  echo "â–‘ "
  dotsay "â–‘ ðŸ’£ðŸ’¥ @b@yellow[[oh snap, we done blowed up!]]"
  echo "â–‘ "
  dotsay "â–‘  - be sure to check back through the output above.. ðŸ‘†"
  echo "â–‘ "
}

update && yay || oops

popd >/dev/null
