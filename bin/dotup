#!/bin/bash

if [[ -z $XDG_DATA_HOME ]]; then
  export XDG_DATA_HOME="$HOME/.local/share"
fi
if [[ -z $XDG_CONFIG_HOME ]]; then
  export XDG_CONFIG_HOME="$HOME/.config"
fi

[[ -f "${XDG_CONFIG_HOME}/zsh/lib/helpers.zsh" ]] && source "${XDG_CONFIG_HOME}/zsh/lib/helpers.zsh"

set -euo pipefail

# -- set some useful vars for executable info:
__dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
__file="${__dir}/$(basename "${BASH_SOURCE[0]}")"
__base="$(basename ${__file} .sh)"
__root="$(cd "$(dirname "${__dir}")" && pwd)"
# shellcheck disable=SC2034,SC2015
__invocation="$(printf %q "${__file}")$( (($#)) && printf ' %q' "$@" || true)"

auth() {
  # gather sudo privileges:
  log_warn "needs sudo for things:"
  sudo -v || exit 1

  # Keep-alive: update existing `sudo` time stamp until setup has finished
  while true; do
    sudo -n true
    sleep 60
    kill -0 "$$" || exit
  done 2>/dev/null &
}

# update steps:
# - submodules
# - dotbot create
# - dotbot link
# - asdf / lib + plugins + default tool plugins + list caches (https://www.notion.so/Droplet-Ubuntu-Upgrade-0bacdb0df2344225b243362982d0c861)
# - homebrew / lib + outdated
# - nvim
# - paq
# - (macos) elixirls
# - (macos) kitty icon update
# - (linux/seth-dev) remote-dev update
# - (linux/seth-dev) dev update

update() {
  log "update git submodules (recursively).." &&
    git submodule update --init --recursive

  log "create missing folders and symlinks.." &&
    ./install --only create link

  if [[ "$(uname)" == "Darwin" ]]; then
    log "update xcode cli tools.."
    ./bin/xcode-install -f
  fi

  log "homebrew install.." &&
    ./bin/brew-install &&
    ./install --only brewfile

  log "asdf install.." &&
    ./bin/asdf-install

  if [[ "$(uname)" == "Darwin" ]]; then
    log "post-homebrew.."
    log "remove brew-installed ruby.." &&
      brew uninstall --ignore-dependencies --force ruby

    # FIXME: find a better way to ensure i'm leaving 3.3, and only removing newer versions.
    log "remove latest weechat and relink to 3.3" &&
      # NOTE: presently weechat 3.3 is the only one that works for my setup. ¯\_(ツ)_/¯
      brew uninstall weechat && brew link weechat
  fi

  log "neovim install.." && ./bin/nvim-install

  log "paq-nvim install.." &&
    ./bin/paq-install -u

  if [[ "$(uname)" == "Darwin" ]]; then
    log "elixir-ls install.." &&
      ./bin/elixirls-install master

    log "kitty icon update.." &&
      ./config/kitty/update_icon.sh
  fi

  log "github auth login.." &&
    ./bin/gh-login
}

yay() {
  log_ok "dotfiles update complete!"
  command cat <<EOF

░
░ $(dotsay "👍 @b@yellow[[donesies!]]")
░ $(dotsay "@b@green[[]]")
EOF

  if [[ "$(hostname)" == "seth-dev" ]]; then
    command cat <<EOF
░
░  $(dotsay "✸ since you're on $(hostname), you might want to:")
░
░   $(dotsay "• run \`@b@blue[[dev update]]\`")
░
EOF
  else
    command cat <<EOF
░
░  $(dotsay "✸ since you're on $(hostname), you might want to:")
░
░   $(dotsay "• nothing more to do.")
░

EOF
  fi
}

oops() {
  log_error "dotfiles update failed!"
  command cat <<EOF

░
░ $(dotsay "💣💥 @b@yellow[[oh snap, something blew up!1!]]")
░ $(dotsay "@b@red[[]]")
░
░  $(dotsay "✸ be sure to check back through the script's output above 👆")
░
░   $(dotsay "• there's gotta be something useful back there..")
░

EOF
}

# change to $DOTS dir
pushd "$DOTS" >/dev/null

# show banner with useful info
"$DOTS/bin/dotbanner"

# require sudo and then update
(auth && update) && yay || oops

# back to previous dir
popd >/dev/null
