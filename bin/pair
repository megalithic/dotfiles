#!/bin/sh
# http://iamvery.com/2013/11/16/tmux-pairing-anywhere-on-your-box.html

command="$(basename "$0")"

# Make sure dependencies are installed
[ ! "$(command -v gh-auth)" ] && echo "gh-auth not found (gem install github-auth)" && exit 1
[ ! "$(command -v tmux)" ] && echo "tmux not found" && exit 1

help(){
  echo "Usage: "$command" <subcommand> [options]\n"
  echo "Subcommands:"
  echo "    add  Add a github user"
  echo "    rm   Remove a github user"
  echo "    ls   List github users"
  echo "    up   Open shared tmux session"
  echo "    down Terminates shared tmux session"
  echo "    ssh  Start a reverse tunnel for pair sharing"
  echo "         See: https://ngrok.com"
}

add(){
  gh-auth add --users "$@" --command="$(which tmux) attach -t pairing"
}

rm(){
  gh-auth remove --users "$@"
}

ls(){
  gh-auth list
}

up(){
  for user in "$@";do
    add "$user"
  done

  # NOTE: you might want to use tmux-sessionist to create a new session first
  tmux rename-session pairing
  tmux send-keys "ngrok start pairing" C-m
  tmux split-window -h
  # sleep 10 # some delay so tunnel has time to get up
  tmux send-keys "pair ssh" C-m
}

down(){
  die ngrok
  tmux kill-session -t pairing
}

ssh(){
  host="1.tcp.ngrok.io"
  # port=$(curl -s http://localhost:4040/api/tunnels|jq -r '.tunnels[0].public_url'| cut -d : -f3)
  port=24949
  user=pair
  ssh_command="ssh -p $port $user@$host"
  echo ""
  echo "pairing available at:"
  echo "$ssh_command"
  echo
  echo "for the following users:"
  echo "$(pair ls)"
  echo "$ssh_command" |  pbcopy
}

subcommand=$1
case $subcommand in
  '' | '-h' | '--help')
    help ;;
  *)
    shift
    ${subcommand} $@
    ;;
esac
