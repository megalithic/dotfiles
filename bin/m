#!/usr/bin/env bash

# gleefully thieved from https://github.com/mhanberg/.dotfiles/blob/4cd05cb9c0985363a65657a43b12fa9a017686f1/bin/m
# who stole it without remorse from https://github.com/wojtekmach/dotfiles/blob/master/bin/m

set -e

if [ -f mix.lock ] && [ ! -d deps ]; then
  mix deps.get
fi

case $1 in
  "")
    if [ -f mix.exs ]; then
      iex -S mix
    else
      iex
    fi
    ;;

  setup)
    if grep --quiet -E " setup: \[" mix.exs; then
      shift
      mix setup "$@"
    else
      mix deps.get && mix compile
    fi
    ;;

  d)
    shift
    if grep --quiet -E "ex_doc.*only: :docs" mix.exs; then
      MIX_ENV=docs mix docs -f html --open "$@"
    else
      mix docs -f html --open "$@"
    fi
    ;;

  s)
    iex -S mix phx.server
    ;;

  f)
    if [[ -f .formatter.exs ]]; then
      inputs=$(grep "inputs:" .formatter.exs)

      if [[ -n "$inputs" ]] && [[ "$inputs" != *"inputs: []"* ]]; then
        shift
        mix format "$@"
      fi
    fi
    ;;

  h)
    printf -- "Usage: %s [subcommand]\n" "m"
    printf -- "\n"
    printf -- "Subcommands:\n"
    printf -- "  h  This help text you're presently reading ðŸ˜„\n"
    printf -- "  d  generates and opens docs\n"
    printf -- "  s  runs iex -S mix phx.server\n"
    printf -- "  f  runs mix format\n"
    printf -- "  setup  sets up the project\n"
    printf -- "  _  runs iex with/without mix\n"
    printf -- "\n"

    exit 0
    ;;

  *)
    mix "$@"
    ;;
esac
