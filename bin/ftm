#!/usr/bin/env zsh
# shellcheck shell=bash

# tm [SESSION_NAME | FUZZY PATTERN] - create new tmux session, or switch to existing one.
# Running `ftm` will let you fuzzy-find a session mame
# Passing an argument to `ftm` will switch to that session if it exists or create it otherwise (as a tmuxinator sesison if it exists)
[[ -n $TMUX ]] && change="switch-client" || change="attach-session"

# new session with tmuxinator config, OR just new basic tmux session
function new_session() {
	tmuxinator start $1 --no-attach \
		&& tmux $change -t "$1" \
		|| tmux new-session -d -s "$1" \
		&& tmux $change -t "$1"
}

# if we pass in a param to this binary, switch to it OR, create a new session
if [ $1 ]; then
	tmux $change -t "$1" 2>/dev/null || (new_session $1)
	return
fi

# get our session from fzf (grabs the the active pane from each session as
# preview, too!)
session=$(tmux list-sessions -F "#{session_name}" 2>/dev/null | fzf --reverse --header='ï¯³ Select a session...' --exit-0 --bind=enter:replace-query+print-query --preview="echo {} | sed 's/:.*$//' | xargs -I{} tmux capture-pane -ep -t {}")

# start the chain to either switch to it if it exists OR, create a new session
echo $session && tmux $change -t "$session" &>/dev/null \
	|| new_session $session \
	&& exit
