#!/usr/bin/env bash

#
# What in tarnation?
#
# CLI tool to control Hubitat (my devices and stuff)
# Requires:
# - Maker API app to be installed in your Hubitat setup
# - `jq` (auto-installs for you if it's not found)
# - ENV vars setup for hubitat private things:
#   - HUBITAT_LAN
#   - HUBITAT_APP_ID_MAKER
#   - HUBITAT_TOKEN
#

#
# REFS:
# - https://thisdavej.com/consuming-web-api-json-data-using-curl-and-jq/#return-one-attribute-from-each-json-object-in-an-array
#

#
# Handy status parsing strings with jq:
# - cloud cover: `'.attributes[] | select(.name == "cloud").currentValue'`
# - is daytime: `hubitat status 32 '.attributes[] | select(.name == \"is_day\").currentValue'`
#

if [ ! $(command -v jq) ]; then
  brew install jq
fi

base_command="$(basename "$0")"

command=""

help() {
  printf -- "Usage: "$base_command" <subcommand> <device_id> [<query>]\n"
  printf -- "Subcommands:\n"
  printf -- "    on       Turn ON specific device\n"
  printf -- "    off      Turn OFF specific device\n"
  printf -- "    status   Get the current status of specific device with query\n"
}

hubitat_local_url() {
  if [[ -n $command ]]; then
    echo "http://$HUBITAT_LAN/apps/api/$HUBITAT_APP_ID_MAKER/devices/$device_id/$command?access_token=$HUBITAT_TOKEN"
  else
    echo "http://$HUBITAT_LAN/apps/api/$HUBITAT_APP_ID_MAKER/devices/$device_id?access_token=$HUBITAT_TOKEN"
  fi
}

execute_command() {
  if [[ -n $device_id ]]; then
    curl -s "$(hubitat_local_url)" | jq "$query"
  else
    echo "ERROR: command $subcommand requires a device_id"
    return 1
  fi
}

on() {
  command="on"
  execute_command
}

off() {
  command="off"
  execute_command
}

set() {
  echo "Not Implemented"
  return 127
}

status() {
  command=""
  if [[ -n $query ]]; then
    execute_command
  else
    echo "ERROR: command $subcommand requires a query"
    return 1

    # query='.'
    # execute_command
  fi
}

subcommand=$1
device_id=$2
query=$3

case $subcommand in
  '')
    help ;;
  '-h' | '--help')
    help ;;
  *)
    shift
    ${subcommand} $@
    ;;
esac
