#!/usr/bin/env zsh
# shellcheck shell=bash

set -euo pipefail
# [[ -v DEBUG ]] && set -x

source "/Users/$(whoami)/.config/zsh/lib/helpers.zsh"

# TODO: figure out how to better use exit trapping
# REF: https://www.youtube.com/watch?v=hWTOfzv_yFE
# ----
# trap 'clean_exit $? $LINENO' EXIT
# trap ctrl_c INT # trap ctrl-c and call ctrl_c()
function clean_exit {
  set +x
  if [[ $1 != "0" ]]; then
    printf -- "FATAL error code %s occurred on line %s" "$1" "$2"
  fi
}

# clean_exit defined in helpers.zsh
trap 'clean_exit $? $LINENO' EXIT

TMUX_LAUNCH_SESSION="slck"

slck_bin="$HOME/.dotfiles/bin/slck"
fzf_bin="/opt/homebrew/bin/fzf"
(command -v "$fzf_bin" &>/dev/null) && FZF_FOUND="${green}installed${reset}" || FZF_FOUND="${red}not installed${reset}"

# -- friendly help if -h option given
function __help() {
  printf -- "\n"
  printf -- "${white}${bold}USAGE:${reset} %s [options]\n" "fslck"
  printf -- "\n"
  printf -- "${grey}${bold}OPTIONS:${reset}\n"
  printf -- "  -h          view this help text\n"
  printf -- "\n"
  printf -- "${grey}${bold}DEPENDENCIES:${reset}\n"
  printf -- "  %s         (%s)\n" "$fzf_bin" "$FZF_FOUND"
  printf -- "\n"

  exit 0
}

# FIXME: opt parsing is failing :(
while getopts "hps" OPTION; do
  case $OPTION in
    h)
      __help
      ;;

    \?)
      # NOTE: this covers the case where an optarg may not be provided
      # and will exit errored
      echo "Invalid Option: -$OPTARG" 1>&2
      __help
      ;;
  esac
done
shift "$((OPTIND - 1))"

selected_status="$(echo "$(slck -s)" | $fzf_bin --reverse --border="none" --padding="1" --preview-window="hidden" --prompt=" select a status  " --header="supported slack statuses:" --bind="enter:replace-query+print-query")"

if [[ -n "$selected_status" ]]; then
  tmux-launch "$TMUX_LAUNCH_SESSION" "$slck_bin -p $selected_status"
else
  exit 0
fi
