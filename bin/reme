#!/bin/bash

set -euo pipefail

source "/Users/$(whoami)/.config/zsh/lib/helpers.zsh"

__dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
__file="${__dir}/$(basename "${BASH_SOURCE[0]}")"
__base="$(basename "$__file" .sh)"
__root="$(cd "$(dirname "$__dir")" && pwd)"
# shellcheck disable=SC2034,SC2015
__invocation="$(printf %q "$__file")$( (($#)) && printf ' %q' "$@" || true)"

function __help() {
  printf -- "\n"
  printf -- "${white}${bold}USAGE:${reset} %s [title] [datetime]\n" "$__base"
  printf -- "\n"
  printf -- "${grey}${bold}OPTIONS:${reset}\n"
  printf -- "  -h          view this help text\n"

  exit 0
}

# only supporting reminder creation with a specific date
if [ "$#" -ne 2 ]; then
  __help
  exit 1
fi

TITLE="$1"
DATETIME_INPUT="$(printf -- "%s" $2 | sed 's/at/ /g')"
DATETIME=$(gdate -d "$DATETIME_INPUT" '+%A, %B %d, %Y at %H:%M:%S' 2> /dev/null)

if [ -z "$DATETIME" ]; then
  echo "Error: Could not parse date-time input '$DATETIME_INPUT'. Please use a valid date format."
  exit 1
fi

exists=$(
  osascript << EOD
tell application "Reminders"
    set found to false
    repeat with r in reminders
        if (name of r is "$TITLE") then
            set found to true
            exit repeat
        end if
    end repeat
    return found
end tell
EOD
)

if [[ "$exists" != "true" ]]; then
  osascript << EOD
tell application "Reminders"
    set newReminder to make new reminder with properties {name:"$TITLE", due date:date "$DATETIME"}
end tell
EOD
  log_ok "Reminder created: $TITLE on $DATETIME"

  exit 0
else
  exit 1
fi
