#!/bin/bash

if [[ -z $XDG_DATA_HOME ]]; then
  export XDG_DATA_HOME="$HOME/.local/share"
fi
if [[ -z $XDG_CONFIG_HOME ]]; then
  export XDG_CONFIG_HOME="$HOME/.config"
fi

[[ -f "${XDG_CONFIG_HOME}/zsh/lib/helpers.zsh" ]] && source "${XDG_CONFIG_HOME}/zsh/lib/helpers.zsh"

set -euo pipefail

# -- set some useful vars for executable info:
__dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
__file="${__dir}/$(basename "${BASH_SOURCE[0]}")"
__base="$(basename ${__file} .sh)"
__root="$(cd "$(dirname "${__dir}")" && pwd)"
# shellcheck disable=SC2034,SC2015
__invocation="$(printf %q "${__file}")$( (($#)) && printf ' %q' "$@" || true)"

FORCE_INSTALL="false"
CLEAN_FIRST="false"

while getopts "fc" OPTION; do
  case $OPTION in

    f)
      FORCE_INSTALL="true"
      ;;

    c)
      CLEAN_FIRST="true"
      ;;

    \?)
      echo "Invalid Option: -$OPTARG" 1>&2
      exit 1
      ;;

  esac
done
shift $((OPTIND - 1))

asdf_path="${HOME}/.asdf"

install_plugins() {
  log "adding asdf plugins.."
  # preferred plugins..
  #  -- generic things to manage with asdf:
  #     https://github.com/asdf-community/asdf-link
  asdf plugin-add nodejs https://github.com/asdf-vm/asdf-nodejs.git
  asdf plugin-add ruby https://github.com/asdf-vm/asdf-ruby.git
  asdf plugin-add erlang https://github.com/asdf-vm/asdf-erlang.git
  asdf plugin-add elixir https://github.com/asdf-vm/asdf-elixir.git
  asdf plugin-add elm https://github.com/asdf-community/asdf-elm.git
  asdf plugin-add golang https://github.com/kennyp/asdf-golang.git
  asdf plugin-add lua https://github.com/Stratus3D/asdf-lua.git
  asdf plugin-add rust https://github.com/code-lever/asdf-rust.git
  asdf plugin-add python https://github.com/danhper/asdf-python.git

}

install_versions() {
  # Disable linuxbrew as it breaks ruby-build and possibly others
  # Save so we can revert
  [[ "$(uname)" == "Linux" ]] && OLD_PATH="$PATH"
  # Remove linuxbrew from the path
  [[ "$(uname)" == "Linux" ]] && export PATH="$(echo $PATH | tr : '\n' | grep -v linuxbrew | paste -s -d:)"

  asdf list all nodejs >/dev/null
  asdf list all ruby >/dev/null
  asdf install

  # revert path
  [[ "$(uname)" == "Linux" ]] && export PATH=$OLD_PATH
}

do_install() {
  if [[ ! $(type "asdf" &>/dev/null) || "$CLEAN_FIRST" == "true" ]]; then
    log_warn "cleaning existing asdf install from $asdf_path"
    rm -rf "$asdf_path" || exit 1
  fi

  log "cloning asdf into $asdf_path"
  (git clone https://github.com/asdf-vm/asdf.git "$asdf_path" &&
    source "$asdf_path/asdf.sh" &&
    install_plugins &&
    install_versions &&
    asdf reshim &&
    log_ok "completed installing asdf-nvim into $asdf_path") ||
    exit 1
}

if [[ $(type "asdf" &>/dev/null) && "$FORCE_INSTALL" == "false" ]]; then
  log_warn "asdf already installed; updating instead."
  asdf update && asdf plugin update --all && asdf reshim
elif [[ ! $(type "asdf" &>/dev/null) || "$FORCE_INSTALL" == "true" ]]; then
  do_install || exit 1
fi
