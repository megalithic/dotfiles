#!/bin/zsh

if [[ -z $XDG_DATA_HOME ]]; then
  export XDG_DATA_HOME="$HOME/.local/share"
fi
if [[ -z $XDG_CONFIG_HOME ]]; then
  export XDG_CONFIG_HOME="$HOME/.config"
fi

source "${HOME}/.dotfiles/config/zsh/lib/helpers.zsh"

# set -euo pipefail

# -- set some useful vars for executable info:
__dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
__file="${__dir}/$(basename "${BASH_SOURCE[0]}")"
__base="$(basename "$__file" .sh)"
__root="$(cd "$(dirname "$__dir")" && pwd)"
# shellcheck disable=SC2034,SC2015
__invocation="$(printf %q "$__file")$( (($#)) && printf ' %q' "$@" || true)"

ELIXIRLS_PATH="${XDG_DATA_HOME}/lsp/elixir-ls"
TMP_PATH="$HOME/tmp"
mkdir -p "$ELIXIRLS_PATH"

VERSION="${1:-master}"
TARGET=""
BINARY=""
BUILD_TYPE=""

# REF: https://github.com/outstand/atlas/blob/83345ed348ad0b6fb5a8c413b5202f5cfaf5d547/Dockerfile
do_install() {
  case "$VERSION" in
  '' | 'stable')
    TARGET="https://github.com/elixir-lsp/elixir-ls/releases/latest/download/"
    BINARY="elixir-ls.zip"
    BUILD_TYPE="archive"
    ;;
  'dev')
    TARGET="$HOME/code/elixir-ls"
    BUILD_TYPE="local"
    ;;
  *)
    TARGET="https://github.com/elixir-lsp/elixir-ls/archive/"
    BINARY="${VERSION}.tar.gz"
    BUILD_TYPE="source"
    ;;
  esac

  log "downloading and installing to $ELIXIRLS_PATH"
  if [[ $BUILD_TYPE == "archive" ]]; then
    curl -fLO "$TARGET/$BINARY" &&
      unzip -o "$BINARY" -d "$ELIXIRLS_PATH" &&
      chmod +x "$ELIXIRLS_PATH/language_server.sh" &&
      log_ok "unpacked $HOME/$BINARY" &&
      (rm "$BINARY" && log_ok "removed $HOME/$BINARY") &&
      log_ok "finished downloading and installing $VERSION elixir-ls to $ELIXIRLS_PATH" ||
      exit 1
  elif [[ $BUILD_TYPE == "source" ]]; then
    cd "$TMP_PATH"
    curl -fLO "$TARGET/$BINARY" &&
      tar -xvzf "$BINARY" -C "$TMP_PATH" &&
      log_ok "unpacked $TMP_PATH/$BINARY" &&
      pushd "$TMP_PATH/elixir-ls-$VERSION" >/dev/null &&
      mix local.hex --force && mix local.rebar --force &&
      mix deps.get
    MIX_ENV=prod mix compile
    MIX_ENV=prod mix elixir_ls.release -o "$ELIXIRLS_PATH" &&
      log_ok "built elixir-ls" &&
      popd >/dev/null &&
      (rm -rf "$TMP_PATH/elixir-ls-$VERSION" && log_ok "removed $TMP_PATH/elixir-ls-$VERSION") &&
      (rm "$BINARY" && log_ok "removed $TMP_PATH/$BINARY") &&
      log_ok "finished downloading and installing $VERSION elixir-ls to $ELIXIRLS_PATH" ||
      exit 1
  elif [[ $BUILD_TYPE == "local" ]]; then
    pushd "$TARGET" >/dev/null &&
      mix local.hex --force && mix local.rebar --force &&
      mix deps.get
    MIX_ENV=prod mix compile
    MIX_ENV=prod mix elixir_ls.release -o "$ELIXIRLS_PATH" &&
      log_ok "built elixir-ls" &&
      popd >/dev/null &&
      log_ok "finished building $VERSION elixir-ls to $ELIXIRLS_PATH" ||
      exit 1
  fi
}

do_install || exit 1
