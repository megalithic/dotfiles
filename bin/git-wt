#!/usr/bin/env bash
#
#
# REF:
# https://www.youtube.com/watch?v=2uEqYw-N8uE
# https://github.com/ThePrimeagen/git-worktree.nvim
# https://github.com/yankeexe/git-worktree-switcher/blob/master/wt

set -euo pipefail
[[ -v DEBUG ]] && set -x

source "$HOME/.config/zsh/lib/helpers.zsh"

# input_args=${*:-}
# args=("$input_args")

(command -v fzf &>/dev/null) && FZF_FOUND="installed" || FZF_FOUND="not installed"

# -- set some useful vars for executable info:
__dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
__file="${__dir}/$(basename "${BASH_SOURCE[0]}")"
__base="$(basename "$__file" .sh)"
__root="$(cd "$(dirname "$__dir")" && pwd)"
# shellcheck disable=SC2034,SC2015
__invocation="$(printf %q "$__file")$( (($#)) && printf ' %q' "$@" || true)"

# -- friendly help if -h option given
function __help() {
  printf -- "Usage: %s [commands] [WORKTREE | FUZZY_PATTERN]\n" "$__base"
  printf -- "\n"
  printf -- "   Commands:\n"
  printf -- "     list              List checked out worktrees. \n"
  printf -- "     list -b           List remote branches/worktrees. \n"
  printf -- "     -                 Check out Main worktree. \n"
  printf -- "     help              This help text you're presently reading. ðŸ˜„\n"
  printf -- "\n"
  printf -- "   Dependencies:\n"
  printf -- "     fzf             (%s)\n" "$FZF_FOUND"
  printf -- "\n"

  exit 0
}

# Change worktree based on user argument.
function __change_worktree() {
  local directory_target="${1:-}"
  if [[ "$directory_target" == "" ]]; then
    git worktree list
  else
    log_info Changing to worktree at: "$directory_target"
    cd "$directory_target"
    # exec "$SHELL"
  fi
}

# while getopts "h" OPTION; do
#   case $OPTION in
#     h)
#       __help
#       ;;
#
#     \?)
#       # NOTE: this covers the case where an optarg may not be provided
#       # and will exit errored
#       echo "Invalid Option: -$OPTARG" 1>&2
#       exit 1
#       ;;
#
#     :)
#       echo "Invalid Option: -$OPTARG requires an argument" 1>&2
#       exit 1
#       ;;
#   esac
# done
# # shift $((OPTIND - 1))
# shift "$(($OPTIND - 1))"

# -- this is our given session_name param, sans options
worktree="${1:-}"
directory=""

case "$worktree" in
  help)
    __help
    ;;
  list)
    shift "$1"
    worktree_option="${1:-}"
    case "$worktree_option" in
      -b)
        git branch -r
        ;;
      *)
        git worktree list --porcelain
        ;;
    esac
    ;;
  -)
    echo "in -"
    directory=$(git worktree list --porcelain | grep -E 'worktree ' | awk '{print $0; exit}' | cut -d ' ' -f2-)
    ;;
  \?)
    # NOTE: this covers the case where an optarg may not be provided
    # and will exit errored
    echo "No argument given" 1>&2
    exit 1
    ;;
    # *)
    #   directory=$(git worktree list --porcelain | grep -E 'worktree ' | awk '/'"$worktree"'/ {print; exit}' | cut -d ' ' -f2- | fzf)
    #   ;;
esac
# echo "directory: $directory"
# If directory variable is not empty then change worktree
if [[ "$directory" == "" ]]; then
  worktrees="$(git worktree list --porcelain | grep -E 'worktree ' | awk '/'"$worktree"'/ {print;}' | cut -d ' ' -f2-)"
  if [[ "$worktrees" -gt "1" ]]; then
    __change_worktree "$("$worktrees" | fzf)"
  else
    # git worktree list && __help
    __help
  fi
else
  __change_worktree "$directory"
fi
