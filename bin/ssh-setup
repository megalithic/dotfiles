#!/usr/bin/env zsh

set -e

function log {
  printf '%s%s\n%s' $(tput setaf 4) "$*" $(tput sgr 0)
}

function log_ok {
  printf '%s[%s] %s\n%s' $(tput setaf 2) "$(date '+%x %X')" "$*" $(tput sgr 0)
}

function log_warn {
  printf '%s%s[%s] %s\n%s' $(tput bold) $(tput setaf 3) "$(date '+%x %X')" "-> [!] $*" $(tput sgr 0)
}

function gh_key {
  log_warn -n "-> add this key to your github account? [yN]"
  read continue_gh_reply

  case $continue_gh_reply in
    [Yy]) $(open "https://github.com/settings/keys") ;;
    [Nn]) log_warn "$skip_gh_message" ;;
    *) log_warn "$skip_gh_message" ;;
  esac
  log "-> if you did add your key to github, you can verify with: 'ssh -T git@github.com'"
}

function do_key {
  log_warn -n "-> add this key to your digitalocean account? [yN]"
  read continue_do_reply

  case $continue_do_reply in
    [Yy]) $(open "https://cloud.digitalocean.com/account/security") ;;
    [Nn]) log_warn "$skip_do_message" ;;
    *) log_warn "$skip_do_message" ;;
  esac
}

KEY_NAME="${1:-$USER-$HOST}"
KEY_ID="${1:-$USER@$HOST}"

ssh_path="$HOME/.ssh"
key_id="$KEY_ID"
key_file="$KEY_NAME"
key_type="ed25519"
key_path="$ssh_path/$key_file"
key_path_pub="$ssh_path/$key_file.pub"
skip_gh_message="-> skipping GH; be sure to visit https://github.com/settings/keys to add your new key!"
skip_do_message="-> skipping DO; be sure to visit https://cloud.digitalocean.com/account/security to add your new key!"

log "-> generating an ssh public/private key with params:"
echo "- platform      = $(uname)"
echo "- key_id        = $key_id"
echo "- key_type      = $key_type"
echo "- key_file      = $key_file"
echo "- key_path      = $key_path"
echo "- key_path_pub  = $key_path.pub"
echo

log "-> executing command: \"ssh-keygen -t key_type -C '$key_id' -N '' -f '$key_path'\""
ssh-keygen -t "$key_type" -C "$key_id" -N "" -f "$key_path"

sleep 0.5
log '-> executing command: "eval '$(ssh-agent -s)"\""
eval "$(ssh-agent -s)"

sleep 0.5
log '-> executing command: "ssh-add -K '$key_path"\""
case "$(uname)" in
  Darwin)
    ssh-add -K "$key_path"
    ;;
  Linux)
    ssh-add "$key_path"
    ;;
esac

sleep 0.5
log '-> executing command: "pbcopy < '$key_path_pub"\""
pbcopy <"$key_path_pub"

log_ok "-> DONE creating ssh key at "$key_path_pub"; copied to clipboard."

gh_key
do_key
