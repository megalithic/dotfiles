-- ┌───────────────────────────────────────────────────────────────────────────┐
-- │                                                                           │
-- │ Setup for Lua-based plugins                                               │
-- │ --> REF: https://github.com/nanotee/nvim-lua-guide                        │
-- │                                                                           │
-- └───────────────────────────────────────────────────────────────────────────┘

-- require("lib")
-- _G["wr"] = require("wr.global")
-- require("settings")
-- require("plugins")
-- 
-- -- Useful aliases
-- local cmd, g, o, w, b = vim.cmd, vim.g, vim.o, vim.wo, vim.bo
-- local function map(lhs, rhs)
--   vim.api.nvim_set_keymap("n", "<leader>" .. lhs, rhs, {noremap = true, silent = true})
-- end
-- 
-- -- require "lsp"
-- 
-- require "plugins"
-- 
-- cmd "runtime vimrc"
-- 
-- -- Activate 24 bit colors
-- o.termguicolors = true
-- 
-- o.laststatus    = 2
-- o.termguicolors = false
-- o.cursorline    = false
-- o.clipboard     = "unnamedplus"
-- o.foldlevel     = 99
-- o.fileencodings = "utf-8,gbk,ucs-bom,cp936,gb18030,big5,latin1"
-- o.modeline      = true
-- o.modelines     = 3
-- o.smartcase     = true
-- o.ignorecase    = true
-- o.mouse         = "a"
-- -- o.cmdheight     = 2
-- o.autowrite     = true
-- o.colorcolumn   = '+0'
-- o.previewheight = 8
-- o.splitbelow    = true
-- o.hidden        = true
-- o.updatetime    = 300
-- o.completeopt   = "menuone,noinsert,noselect"
-- o.shortmess     = "filnxtToOFc"
-- o.cedit         = "<C-R>"  -- open command line window
-- o.statusline="%t %h%w%m%r %=%(%l,%c%V %= %P%)"
-- 
-- ---- Treesitter
-- --local treesitter = require'vim-treesitter.configs'
-- --treesitter.setup {
-- --    ensure_installed = {'rust', 'c', 'lua'},
-- --    highlight = {enable = false},
-- --}
-- 
-- ---- Lightline
-- --g.lightline = {
-- --    colorscheme = 'ayu_mirage',
-- --    active = {
-- --        right = {
-- --            {'percent', 'lineinfo'},
-- --            {'spell', 'filetype', 'fileencoding', 'fileformat'}
-- --        }
-- --    }
-- --}
-- 
-- -- Vimtex
-- g.tex_flavor = "xelatex"
-- 
-- -- Wiki.vim
-- g.wiki_root = "~/Documents/wiki/"
-- g.wiki_filetypes = {"md"}
-- g.wiki_link_target_type = "md"
-- g.wiki_map_link_create = "CreateLinkNames"
-- 
-- function create_links(txt)
--   return os.date("%Y%m%dT%H%M-") .. txt:lower():gsub("[%s.]+", "-")
-- end
-- 
-- cmd [[function! CreateLinkNames(txt) abort
--         return v:lua.create_links(a:txt)
--       endfunction]]
-- 
-- -- Pandoc markdown
-- g["pandoc#spell#enabled"] = 0
-- g["pandoc#syntax#codeblocks#embeds#langs"] = {"c", "sh", "lua"}
-- g["pandoc#syntax#conceal#use"] = 0
-- cmd [[augroup pandoc_syntax
--         au! BufNewFile,BufFilePre,BufRead *.md set filetype=markdown.pandoc
--     augroup END]]
-- 
-- -- Julia
-- g.latex_to_unicode_tab = 0
-- g.latex_to_unicode_auto = 1
-- g.latex_to_unicode_file_types = {"julia", "lisp", "pandoc"}
-- map("j", ":!julia %<cr>") -- Execute julia file. TODO: How not to recompile everything?
-- 
-- -- Spelling
-- map("x", "b1z=e") -- Correct previous word
-- map("c", "1z=1") -- Correct current word
-- map("s", ":lua cycle_lang()<cr>") -- Change spelling language
-- do
--   local i = 1
--   local langs = {"", "en", "es", "de"}
--   function cycle_lang()
--     i = (i % #langs) + 1 -- update index
--     b.spelllang = langs[i] -- change spelllang
--     w.spell = langs[i] ~= "" -- if empty then nospell
--   end
-- end
-- 
-- -- Poor man's Zen mode
-- map("z", ":lua toggle_zen()<cr>")
-- function toggle_zen()
--   w.list = not w.list --(hidden chars)
--   w.number = not w.number
--   w.relativenumber = not w.relativenumber
--   w.cursorline = not w.cursorline
--   w.cursorcolumn = not w.cursorcolumn
--   w.colorcolumn = w.colorcolumn == "0" and "80" or "0"
--   o.laststatus = o.laststatus == 2 and 0 or 2
--   o.ruler = not o.ruler
-- end
-- 
-- -- Other mappings
-- map("l", "<cmd>luafile %<cr>") -- source lua file
-- map("t", "<cmd> sp<cr>|<cmd>te   <cr>i") -- open terminal
-- map("rc", "<cmd> e ~/.config/nvim <cr>") -- open config directory

-- [ loaders.. ] ---------------------------------------------------------

require("settings")
require("autocmds")
require("keymaps")
--require("p.telescope")
--require("p.treesitter")
require("lc.config")
