#!/usr/bin/env zsh

## --- DOCS
#
# How to install older versions:
# - https://stackoverflow.com/questions/62032757/install-a-previous-version-of-chromedriver-with-brew/62765875#62765875
# - https://stackoverflow.com/questions/62785290/installing-previous-versions-of-a-formula-with-brew-extract

# -- taps --

tap "homebrew/bundle"
tap "homebrew/services"
tap "neovim/neovim"
tap "caius/jo"
tap "simeji/jid"
tap "browsh-org/homebrew-browsh" if OS.mac?
tap "heroku/brew" if OS.mac?
# NOTE/REF: https://github.blog/2020-07-02-git-credential-manager-core-building-a-universal-authentication-experience/#macos
tap "microsoft/git"
tap "isacikgoz/taps"
tap "olets/tap"
tap "federico-terzi/espanso" if OS.mac? # legacy version (pre 2.x) -- preferred!
# tap "espanso/espanso" if OS.mac?
tap "wez/wezterm" if OS.mac?
tap "FelixKratz/formulae" if OS.mac? # sketchyvim

# -- for qmk_toolbox --
# brew tap osx-cross/avr;
# brew tap PX4/homebrew-px4;
# brew install avr-gcc@8;
# brew link --force avr-gcc@8;
# brew install dfu-programmer dfu-util gcc-arm-none-eabi avrdude qmk;
# brew cask install qmk-toolbox;
#
# tap "qmk/qmk" if OS.mac?
# tap "osx-cross/avr" if OS.mac?
# tap "PX4/homebrew-px4" if OS.mac?
# # NOTE: at present, 20200327, qmk doesn't support >=avr-gcc@9
# brew "avr-gcc@8", link: true if OS.mac?
# brew "dfu-programmer" if OS.mac?
# brew "dfu-util" if OS.mac?
# brew "gcc-arm-none-eabi" if OS.mac?
# brew "avrdude" if OS.mac?
# brew "qmk" if OS.mac?

# -- cli --

# brew "ansible" if OS.mac?
brew "asdf"
brew "asciidoctor" if OS.mac?
brew "autoconf"
brew "automake"
brew "awscli" if OS.mac?
brew "bash" # used for tmux-plugin -> extrakto
brew "bat"
brew "bat-extras"
brew "blueutil" if OS.mac?
brew "broot"
brew "browsh" if OS.mac?
brew "btop"
brew "catimg"
brew "ccls" # c-lang lsp vs., c-lang lsp in llvm
brew "chafa" # image renderer for telescope/bat/fzf/etc
brew "cmake" if OS.mac?
brew "coreutils" if OS.mac?
brew "curl"
brew "curlie"
brew "dbus"
brew "defaultbrowser" if OS.mac?
brew "deno"
brew "diff-so-fancy"
brew "dnsmasq"
brew "dockutil" if OS.mac?
# USE DOCKER CASK FOR MUCH EASE!
# brew "docker"
# brew "docker-compose"
# brew "docker-credential-helper-ecr"
# brew "docker-machine" # , restart_service: true, link: false

brew "duck" # cli for cyberduck
brew "federico-terzi/espanso/espanso" if OS.mac?
brew "exa"
brew "exercism" if OS.mac?
brew "fasd"
brew "fd"
brew "ffind"
brew "findutils"
brew "fswatch"
brew "superfly/tap/flyctl"
brew "fontforge" if OS.mac?
brew "fop" # used for asdf erlang
brew "fx" # jq but better
brew "fzf" # -> $(brew --prefix)/opt/fzf/install
brew "gawk"
brew "gdb"
brew "gifsicle"
brew "gist"
brew "git"
brew "isacikgoz/taps/gitin"
brew "git-crypt"
brew "git-delta"
brew "git-lfs"
brew "gh"
brew "glow" if OS.mac? # charmbracelet tool
brew "gnutls"
brew "gnupg"
brew "gnu-sed" if OS.mac?
brew "gotop"
brew "gpg" # required for asdf-nodejs
brew "grc"
brew "gum" # charmbracelet tool
brew "highlight"
brew "hopenpgp-tools"
brew "htop"
brew "httpie"
brew "hub"
brew "hyperfine"
brew "ical-buddy" if OS.mac?
brew "jo"
brew "jq"
brew "kerl"
brew "lazydocker"
brew "lazygit"
brew "libnotify" if OS.linux?
brew "llvm" if OS.mac? # contains c-lang lsp (the preferred one?)
brew "lnav"
brew "lsd"
brew "luajit", args: ["HEAD"] if OS.mac?
brew "luarocks"
brew "lua-language-server"
brew "luv"
brew "mas" if OS.mac?
brew "media-info"
brew "mkcert"
brew "mods" # charmbracelet tool
brew "moreutils"
brew "mycli"
brew "nb" if OS.mac?
brew "ncurses"
brew "elixir-tools/tap/next-ls"
# brew "neovim", args: ["HEAD"] # building from source now
# brew "neovim-remote" # pip3'd
brew "ninja" # for lua sumneko lsp
brew "nmap"
brew "nss"
brew "noti"
brew "ollama" # ai
brew "olets/tap/zsh-abbr"
brew "openssl"
brew "openssl@1.1"
brew "p7zip"
brew "pandoc"
brew "perl"
brew "pgcli"
brew "pkg-config"
brew "pigz"
brew "pinentry-mac" if OS.mac?
# --
# POST-install for postgresql:
# initdb /usr/local/var/postgres -E utf8
# psql -> CREATE USER postgres SUPERUSER;
brew "postgresql@14", link: true, restart_service: true if OS.mac?
# brew "postgresql@15", link: false if OS.mac?
#--
# brew "python@3.7", link: false
# brew "python@3.8", link: false
# brew "python@3.9", link: false
# brew "python@3.10", link: false
brew "python@3.11", link: true
brew "python3", link: false
brew "readline"
brew "reattach-to-user-namespace" if OS.mac?
brew "ren"
brew "ripgrep"
brew "jdxcode/tap/rtx"
brew "ruby-build" # needed for asdf/ruby
brew "rust"
brew "rustup-init"
brew "qt" if OS.mac?
brew "shellcheck"
brew "shfmt"
brew "ssh-copy-id"
# brew "stack"
# brew "starship"
brew "stow"
# brew "sketchybar", restart_service: true if OS.mac? # sketchybar
# brew "svim" if OS.mac? # restart_service: true if OS.mac? # sketchyvim
brew "switchaudio-osx" if OS.mac?
brew "terminal-notifier" if OS.mac?
brew "the_silver_searcher"
brew "tidy-html5"
brew "timg" if OS.mac? # for image rendering in kitty
brew "tldr"
brew "tmux", args: ["HEAD"] if OS.mac? # , args: ["HEAD"]
brew "tmuxp"
brew "transcrypt" if OS.mac?
brew "trash" if OS.mac?
brew "tree"
brew "tree-sitter", args: ["HEAD"]
brew "ugit" # undo several git scenarios
brew "urlview"
brew "jstkdng/programs/ueberzugpp"
brew "viu"
brew "weechat" if OS.mac? # can also -> args: ["build-from-source"]
brew "wget"
brew "wifi-password" if OS.mac?
brew "wxwidgets" # for erlang
brew "yubico-piv-tool" if OS.mac?
brew "libyubikey" if OS.mac?
brew "pam_yubico" if OS.mac?
brew "xclip" if OS.linux?
brew "vivid"
brew "vim"
brew "viu" # used with fzf-lua for image rendering
brew "ykman"
brew "yubikey-personalization" if OS.mac?
brew "yj"
# brew "zellij"
brew "zf"
brew "zk", args: ["HEAD"] if OS.mac?
brew "zoxide"
brew "zsh"
brew "zsh-autosuggestions"
brew "zsh-completions"
brew "zsh-lovers"
brew "zsh-syntax-highlighting"
brew "zsh-history-substring-search"

# -- casks --

cask_args appdir: "/Applications"

tap "homebrew/cask-versions" if OS.mac?
tap "homebrew/cask" if OS.mac?
tap "homebrew/cask-fonts" if OS.mac?
tap "homebrew/cask-drivers" if OS.mac?

# - fonts
# REF: nerd fonts: https://gist.github.com/davidteren/898f2dcccd42d9f8680ec69a3a5d350e?permalink_comment_id=4396827#gistcomment-4396827
cask "font-jetbrains-mono-nerd-font"
cask "font-ia-writer-quattro"
cask "font-victor-mono-nerd-font"
cask "font-hack-nerd-font"
cask "sf-symbols"
cask "font-symbols-only-nerd-font"
cask "font-cascadia-code"
cask "font-cascadia-code-pl"
cask "font-cascadia-mono"
cask "font-cascadia-mono-pl"
cask "font-caskaydia-cove-nerd-font"
cask "font-recursive-code"
cask "font-recursive-code-nerd-font"

cask "font-cascadia-mono"
cask "font-3270-nerd-font"

# - gui
cask "1password"
cask "1password-cli"
cask "alfred"
# cask "android-studio" if OS.mac?
# cask "backblaze"
cask "balenaetcher"
cask "bartender"
cask "bettertouchtool"
cask "brave-browser-dev"
cask "cameracontroller"
cask "cloudflare-warp"
cask "colorsnapper"
# cask "caldigit-thunderbolt-charging"
# cask "caldigit-docking-utility"
cask "contexts"
cask "controlplane"
cask "cyberduck"
cask "dash"
cask "docker"
# cask "dropbox"
# cask "elmedia-player"
# cask "espanso" if OS.mac?
# cask "discord"
# cask "expressvpn"
cask "figma"
cask "firefox-developer-edition"
cask "flux"
cask "google-chrome-dev"
# cask "forklift" # replaced with marta for now
cask "hazel"
cask "hammerspoon", greedy: true
# FIXME: needs an !arm64 check
# cask "intel-power-gadget" # requires restart with security allow (intel things)
cask "insomnia"
# cask "inkscape"
cask "istat-menus"
# cask "itsycal"
# cask "kap"
cask "karabiner-elements"
cask "keycastr"
cask "kitty-nightly", greedy: true
# cask "little-snitch4" # requires kernel extension, see notes from install message
# cask "loom"
# cask "marta"
# cask "micro-snitch"
cask "mailmate-beta"
cask "microsoft-edge"
# cask "ngrok"
# cask "notion"
cask "obs-beta"
cask "obsidian"
# cask "oracle-jdk"
cask "postbird" if OS.mac?
# cask "qutebrowser" if OS.mac? # sudo xattr -dr com.apple.quarantine /Applications/qutebrowser.app
cask "raycast" if OS.mac?
cask "signal"
cask "slack"
cask "skim" if OS.mac?
cask "soundsource", greedy: true
cask "spotify"
# cask "thingsmacsandboxhelper"
# cask "vimac"  # FIXME: this requires a click-based install (https://install.appcenter.ms/users/dexterleng/apps/vimac/distribution_groups/sparkle)
cask "the-unarchiver"
cask "utm" # similar parallels/qemu/virtualbox
cask "vivaldi-snapshot"
cask "vlc"
cask "wezterm-nightly"
# cask "usb-overdrive" # causes issues with QMK keyboards
# cask "virtualbox" # requires restart with security allow (oracle things)
# cask "witch" # using contexts in stead
# cask "yubico-authenticator"
# FIXME: needs an !arm64 check
# cask "yubico-yubikey-manager"
cask "yubico-yubikey-piv-manager"
cask "zoom"

# -- app store (mas) --

mas "Signal Shifter", id: 6446061552
mas "Fantastical", id: 975937182
# mas "Mayday", id: 1473168024
# mas "Spark", id: 1176895641
# mas "Canary Mail", id: 1236045954
# mas "Tweetbot", id: 557168941
# mas "Drafts", id: 1435957248
mas "Battery Indicator", id: 1206020918
mas "Brother iPrint&Scan", id: 1193539993
# mas "RocketSim", id: 1504940162
# mas "Vimari", id: 1480933944

# mas "Things", id: 904280696 # might be bailing from this
# mas "Xcode", id: 497799835
# NOTE: turns out, i _HATE_ these applications. burn them to the ground.
# mas "Affinity Photo", id: 824183456
# mas "Affinity Designer", id: 824171161
