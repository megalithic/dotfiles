# https://github.com/radekmorytko/dotfiles/blob/master/dotbot.conf.yaml
# https://github.com/duncz/dotfiles
# https://github.com/tagoro9/dotfiles
# https://github.com/evantravers/dotfiles/blob/master/Makefile
# https://github.com/anishathalye/dotbot#configuration
# https://github.com/sleekybadger/dotfiles
# https://github.com/btmccollum/dotfiles/blob/master/install.conf.yaml
#https://github.com/DmitryOtroshchenko/Dotfiles/blob/master/install/bootstrap-mac.sh
# tmux conf location -> https://unix.stackexchange.com/a/644824/508489

- defaults:
    link:
      create: true
      relink: true
    shell:
      stdout: true
      stderr: true
    brewfile:
      stdout: true
      stderr: true
      include: ["tap", "brew", "cask", "mas"]

- create:
    - ~/code
    - ~/tmp
    - ~/screenshots
    - ~/.config
    - ~/.local/share/packages
    - ~/.local/share/src

- clean:
    ~/:
      force: true
    ~/.config:
      recursive: true

- shell:
    - [git submodule update --init --recursive, Installing submodules]

- link:
    # ----- home
    ~/:
      glob: true
      path: home/*
      prefix: "."

    # ----- config
    ~/.config/bat:
      force: true
      path: config/bat
    ~/.config/broot:
      force: true
      path: config/broot
    ~/.config/espanso:
      force: true
      path: config/espanso
      if: "[ `uname` = Darwin ]"
    ~/.config/fd:
      force: true
      path: config/fd
    ~/.config/hammerspoon:
      force: true
      path: config/hammerspoon
      if: "[ `uname` = Darwin ]"
    ~/.config/karabiner:
      force: true
      path: config/karabiner
      if: "[ `uname` = Darwin ]"
    ~/.config/kitty:
      force: true
      if: "[ `uname` = Darwin ]"
      path: config/kitty
    ~/.config/nvim:
      force: true
      path: config/nvim
    ~/.vimrc: config/nvim/vimrc
    ~/.config/ripgrep:
      force: true
      path: config/ripgrep
    ~/.config/tmux:
      force: true
      path: config/tmux
      if: "[ `uname` = Darwin ]"
    ~/.config/tmuxinator:
      force: true
      path: config/tmuxinator
      if: "[ `uname` = Darwin ]"
    ~/.config/weechat:
      force: true
      path: config/weechat
      if: "[ `uname` = Darwin ]"
    ~/.config/zk:
      force: true
      path: config/zk
      if: "[ `uname` = Darwin ]"
    ~/.config/zsh:
      force: true
      path: config/zsh
    ~/.zshenv: config/zsh/.zshenv
    ~/.config/starship.toml:
      force: true
      path: config/starship.toml
    ~/.config/surfingkeys:
      force: true
      path: config/surfingkeys
      if: "[ `uname` = Darwin ]"

    # ----- git
    ~/.gitmessage:
      force: true
      path: git/gitmessage
    ~/.gitignore_global:
      force: true
      path: git/gitignore_global
    ~/.gitconfig:
      force: true
      path: git/gitconfig
    ~/.gitconfig_macos:
      force: true
      if: "[ `uname` = Darwin ]"
      path: git/gitconfig_macos
    ~/.gitconfig_linux:
      force: true
      if: "[ `uname` = Linux ]"
      path: git/gitconfig_linux

    # ----- misc/other
    ~/.asdfrc: asdf/asdfrc
    ~/.tool-versions: asdf/tool-versions
    ~/.default-gems: asdf/default-gems
    ~/.default-npm-packages: asdf/default-npm-packages
    ~/.default-python-packages: asdf/default-python-packages
    # ~/Library/Application Support/lazygit/config.yml:
    #   force: true
    #   if: "[ `uname` = Darwin ]"
    #   path: config/lazygit/config.yml

# - ghe:
#     - mislav/gh-branch
#     - dlvhdr/gh-prs
- brewfile:
    file: brew/Brewfile
    stdout: true
    stderr: true

- asdf:
    - plugin: elm
      global: 0.19.1
      versions:
        - 0.19.1
    - plugin: lua
      global: 5.1.5
      versions:
        - 5.1.5
    - plugin: elixir
      global: 1.12.3-otp-24
      versions:
        - 1.13.0-otp-24
        - 1.12.3-otp-24
    - plugin: erlang
      global: 24.1.2
      versions:
        - 24.1.2
    - plugin: nodejs
      global: lts
      versions:
        - lts
    - plugin: ruby
      global: 3.1.0
      versions:
        - 2.7.4
        - 3.1.0
    - plugin: rust
      global: stable
      versions:
        - stable
    - plugin: golang
      global: 1.17.1
      versions:
        - 1.17.1

- shell:
    # - [zsh -c "compaudit | xargs chmod g-w", Handle compaudit insecure directories] # https://stackoverflow.com/a/22753363/213904
    - description: Install from source
      command: >-
        cd ~/.local/share/src && echo "-> cd ~/.local/share/src successful";
        [[ ! -d ~/.local/share/src/neovim ]] && git clone git@github.com:neovim/neovim.git && echo "-> git clone neovim successful";
        cd neovim && echo "-> cd neovim successful";
        if (git merge-base --is-ancestor origin/master master); then
          echo "-> already up to date on neovim origin/master; skipping."
        else
          git checkout master && echo "-> checkout master successful";
          git up && echo "-> git up successful";
          rm -rf ~/.local/share/src/neovim/.deps || exit 1 && echo "-> remove .deps successful";
          make CMAKE_BUILD_TYPE=RelWithDebInfo || exit 1 && echo "-> make successful";
          sudo make install || exit 1 && echo "-> make install successful";
        fi

    # - description: Download binaries
    #   command: >-
    #     cd ~/.local/share/packages || exit 1;
    #     wget "https://github.com/neovim/neovim/releases/download/stable/nvim-linux64.tar.gz" -O - | tar -xz;
    #     wget "https://github.com/BurntSushi/ripgrep/releases/download/13.0.0/ripgrep-13.0.0-x86_64-unknown-linux-musl.tar.gz" -O - | tar -xz;
    #     wget "https://github.com/sharkdp/fd/releases/download/v8.3.0/fd-v8.3.0-x86_64-unknown-linux-gnu.tar.gz" -O - | tar -xz;
    #     wget "https://nodejs.org/dist/v17.3.0/node-v17.3.0-linux-x64.tar.xz" -O - | tar -xJ;
    #     wget "https://github.com/cli/cli/releases/download/v2.4.0/gh_2.4.0_linux_amd64.tar.gz" -O - | tar -xz;
    #     wget "https://github.com/dandavison/delta/releases/download/0.11.3/delta-0.11.3-x86_64-unknown-linux-gnu.tar.gz" -O - | tar -xz;
    #     wget "https://github.com/jesseduffield/lazygit/releases/download/v0.31.4/lazygit_0.31.4_Linux_x86_64.tar.gz" -O - | tar -xz lazygit;
    #     wget "https://github.com/starship/starship/releases/download/v1.1.1/starship-x86_64-unknown-linux-gnu.tar.gz" -O - | tar -xz starship;
    #     wget "https://github.com/ajeetdsouza/zoxide/releases/download/v0.8.0/zoxide-v0.8.0-x86_64-unknown-linux-musl.tar.gz" -O - | tar -xz zoxide;
    #     wget "https://github.com/junegunn/fzf/releases/download/0.29.0/fzf-0.29.0-linux_amd64.tar.gz" -O - | tar -xz fzf;
    #     wget "https://raw.githubusercontent.com/junegunn/fzf/0.29.0/shell/key-bindings.zsh" -O fzf-key-bindings.zsh;
    #     wget "https://git.io/antigen" -O antigen.zsh

    # - [~/.dotfiles/bin/gh-login, GitHub Auth]
  #
  # - [rm -rf ~/.tmux && git clone https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm, Installing TPM]
  #
  # - [
  #     rm -rf ~/.local/share/nvim/site/pack/packer && git clone --depth 1 https://github.com/wbthomason/packer.nvim ~/.local/share/nvim/site/pack/packer/start/packer.nvim,
  #     Installing Packer,
  #   ]
  #
  # - [
  #     git clone https://github.com/savq/paq-nvim.git "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/pack/paqs/opt/paq-nvim,
  #     Installing paq-nvim
  #   ],
  #
  # - [
  #     nvim --headless -u NONE -c 'autocmd User PackerComplete quitall' -c 'lua require("plugins")' -c 'lua require("packer").sync()',
  #     Installing Neovim plugins,
  #   ]
