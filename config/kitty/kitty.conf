# vim:fdm=marker

# REF:
# extremely useful settings/options:
# https://github.com/akinsho/dotfiles/blob/main/.config/kitty/kitty.conf

#--------------------------------------------------------------------------------
# Keymaps to remember
#--------------------------------------------------------------------------------
# <Ctrl>-<Cmd>-, - reload config
# <Cmd>+n - new window

#--------------------------------------------------------------------------------
# Fonts {{{
#--------------------------------------------------------------------------------
# Font family. You can also specify different fonts for the
# bold/italic/bold-italic variants.
#
# You can get a list of full family names available on your computer by running
# kitty list-fonts
font_family                     JetBrainsMono Nerd Font Mono Regular
bold_font                       JetBrainsMono Nerd Font Mono Bold
italic_font                     JetBrainsMono Nerd Font Mono Italic
bold_italic_font                JetBrainsMono Nerd Font Mono Bold Italic

# NOTE: Do not use odd values as these affect how kitty renders margin (in pts)
font_size                       15.0
# https://sw.kovidgoyal.net/kitty/conf.html?highlight=font%20features
# https://github.com/tonsky/FiraCode/wiki/How-to-enable-stylistic-sets
font_features                   FiraCodeNerdFontComplete-Retina +zero +ss06

# disable ligatures when the cursor is over them so they are easier to edit
disable_ligatures               cursor

# adjust_line_height  1
adjust_line_height 120%

# support for nonicons
# ref: https://github.com/yamatsum/nvim-nonicons/issues/7#issuecomment-861981091
# symbol_map U+f101-U+f208 nonicons

# symbol_map U+e903-U+e911,U+e913-U+e916,U+e918-U+e919,U+e91e-U+e925,U+e927-U+e929,U+e92b-U+e936,U+e938-U+e93a all-the-icons
# symbol_map U+e600,U+e601,U+e679,U+e6b4,U+e6b8,U+e902,U+e912,U+e917,U+e91a-U+e91d,U+e926,U+e92a,U+e937,U+e93f,U+e95d,U+e95f,U+e960-U+e964,U+e96c,U+e972,U+e97d,U+e983,U+e987,U+e989,U+e98a,U+e990,U+e991,U+e993,U+e998,U+e99a,U+e99f,U+e9ac,U+e9b1,U+e9b2,U+e9c2,U+e9da,U+e9dd,U+ea08,U+ea1b,U+ea1d,U+ea33,U+ea44,U+ea54,U+ea5a,U+f07c,U+f07d,U+f102,U+f106,U+f147 file-icons

# symbol_map U+E5FA-U+E630,U+E700-U+E7C5,U+E0A0-U+E0A2,U+E0B0-U+E0B3,U+E0A3-U+E0A3,U+E0B4-U+E0C8,U+E0CA-U+E0CA,U+E0CC-U+E0D4,U+E000-U+E00D,U+F000-U+F2E0,U+E200-U+E2A9,U+23FB-U+23FE,U+2B58-U+2B58,U+F500-U+FD46,U+E300-U+E3EB,U+F300-U+F31C,U+F400-U+F4A8,U+2665-U+2665,U+26A1-U+26A1,U+F4A9-U+F4A9 Symbols Nerd Font
# symbol_map U+F101-U+F22A nonicons
# symbol_map U+EA60-U+EBEB codicon
#}}}
#--------------------------------------------------------------------------------
# Cursor customization {{{
#--------------------------------------------------------------------------------
cursor                          none
# The cursor shape can be one of (block, beam, underline)
# cursor_shape     block
cursor_stop_blinking_after      10.0
pointer_shape_when_dragging     hand
#}}}
#--------------------------------------------------------------------------------
# Mouse {{{
#--------------------------------------------------------------------------------
copy_on_select                  yes
scrollback_lines                10000
# The modifiers to use rectangular selection (i.e. to select text in a
# rectangular block with the mouse)
# rectangle_select_modifiers ctrl+alt
mouse_hide_wait                 15
# Set the active window to the window under the mouse when moving the mouse around
focus_follows_mouse             yes
#}}}
#--------------------------------------------------------------------------------
# Audio/visual bell {{{
#--------------------------------------------------------------------------------
enable_audio_bell               no
# Makes the dock icon bounce on macOS or the taskbar flash on linux.
window_alert_on_bell            yes
#}}}
#--------------------------------------------------------------------------------
# Window layout {{{
#--------------------------------------------------------------------------------
remember_window_size            yes
enabled_layouts                 tall:bias=55;full_size=1,stack,fat,grid,horizontal
# enabled_layouts               tall,vertical,stack
window_border_width             1.0
window_margin_width             0.0
window_padding_width            15.0
placement_strategy              top-left
inactive_text_alpha             0.8
#}}}
#--------------------------------------------------------------------------------
# Tab bar {{{
#--------------------------------------------------------------------------------
# fade, slant, etc
tab_bar_style                   fade
tab_bar_edge                    bottom
active_tab_font_style           bold-italic
tab_bar_min_tabs                2
tab_title_template              "{title}{' [z]' if layout_name == 'stack' else ''}"
#}}}
#--------------------------------------------------------------------------------
# Advanced {{{
#--------------------------------------------------------------------------------
# HACK: passing environment variables to GUI applications in macOS is very hard
# so this works around that by specifying the path to homebrew installations here
# this only provides the $PATH not all the missing environment variables.
# NOTE: this is wy nvim must be started inside this file using zsh -c 'nvim'
# env PATH=/opt/homebrew/bin/:/usr/local/bin/:${PATH}

# The shell program to execute. The default value of . means
# to use whatever shell is set as the default shell for the current user.
# Note that on macOS if you change this, you might need to add --login to
# ensure that the shell starts in interactive mode and reads its startup rc files.
shell                           .
allow_remote_control            yes
listen_on                       unix:/tmp/mykitty
editor                          nvim
#}}}
#--------------------------------------------------------------------------------
# Startup Sessions {{{
#--------------------------------------------------------------------------------
# https://sw.kovidgoyal.net/kitty/overview/#startup-sessions
# REF:
# - https://dev.to/dylanirlbeck/kitty-sessions-44j2
# NOTE: nvim may need to be be started inside this file using zsh -c 'nvim'
# startup_session                 ~/Dropbox/kitty/startup.conf
# TODO: session switching via https://github.com/muchzill4/kitty-session
#}}}
#-------------------------------------------------------------------------------
# OS specific tweaks {{{
#-------------------------------------------------------------------------------
draw_minimal_borders                    no
hide_window_decorations                 yes
# Change the color of the kitty window's titlebar on macOS. A value of "system"
# means to use the default system color, a value of "background" means to use
# the background color of the currently active window and finally you can use
# an arbitrary color, such as #12af59 or "red". WARNING: This option works by
# using a hack, as there is no proper Cocoa API for it. It sets the background
# color of the entire window and makes the titlebar transparent. As such it is
# incompatible with background_opacity. If you want to use both, you are
# probably better off just hiding the titlebar with macos_hide_titlebar.
# Match one dark vim title bar background color
# macos_titlebar_color #1C1E24
macos_quit_when_last_window_closed      yes
macos_thicken_font                      0.3
macos_custom_beam_cursor                yes
# Use the option key as an alt key. With this set to no, kitty will use
# the macOS native Option+Key = unicode character behavior. This will
# break any Alt+key keyboard shortcuts in your terminal programs, but you
# can use the macOS unicode input technique.
# macos_option_as_alt yes
#}}}
#-------------------------------------------------------------------------------
# Includes {{{
#-------------------------------------------------------------------------------
# You can include secondary config files via the "include" directive.
# If you use a relative path for include, it is resolved with respect to the
# location of the current config file. For example:
# include ${HOME}/${USER}.conf
# megaforest
include themes/megaforest.conf
#}}}
#-------------------------------------------------------------------------------
# Misc stuff I had before pillaging akinsho's {{{
#-------------------------------------------------------------------------------
confirm_os_window_close                 2
dynamic_background_opacity yes
# url_style can be one of: none, single, double, curly
url_style curly
#: The color and style for highlighting URLs on mouse-over. url_style
#: can be one of: none, single, double, curly
open_url_modifiers kitty_mod
#: The modifier keys to press when clicking with the mouse on URLs to
#: open the URL
open_url_with default
#: The program with which to open URLs that are clicked on. The
#: special value default means to use the operating system's default
#: URL handler.
url_prefixes http https file ftp
#: The set of URL prefixes to look for when detecting a URL under the
#: mouse cursor.
copy_on_select yes
#: Copy to clipboard or a private buffer on select. With this set to
#: clipboard, simply selecting text with the mouse will cause the text
#: to be copied to clipboard. Useful on platforms such as macOS that
#: do not have the concept of primary selections. You can instead
#: specify a name such as a1 to copy to a private kitty buffer
#: instead. Map a shortcut with the paste_from_buffer action to paste
#: from this private buffer. For example::
#:     map cmd+shift+v paste_from_buffer a1
#: Note that copying to the clipboard is a security risk, as all
#: programs, including websites open in your browser can read the
#: contents of the system clipboard.
strip_trailing_spaces never
#: Remove spaces at the end of lines when copying to clipboard. A
#: value of smart will do it when using normal selections, but not
#: rectangle selections. always will always do it.
rectangle_select_modifiers ctrl+alt
#: The modifiers to use rectangular selection (i.e. to select text in
#: a rectangular block with the mouse)
terminal_select_modifiers shift
#: The modifiers to override mouse selection even when a terminal
#: application has grabbed the mouse
select_by_word_characters @-./_~?&=%+#
# map cmd+left click to open URLs
mouse_map super+left release grabbed,ungrabbed mouse_handle_click link
sync_to_monitor yes
visual_bell_duration 0
enable_audio_bell no
window_alert_on_bell no
bell_on_tab no
dynamic_background_opacity no
background_opacity 1.0
remember_window_size   yes
pointer_shape_when_dragging hand
# How much to dim text that has the DIM/FAINT attribute set. 1.0 means no dimming and
# 0.0 means fully dimmed (i.e. invisible).
dim_opacity 0.90
shell .
allow_hyperlinks yes
close_on_child_death yes
allow_remote_control yes
clipboard_control write-clipboard write-primary read-clipboard
# term xterm-256color
term xterm-kitty
macos_hide_from_tasks no
macos_traditional_fullscreen yes
macos_quit_when_last_window_closed yes
macos_thicken_font 0.75
hide_window_decorations yes
draw_minimal_borders no
macos_option_as_alt yes
# with a minimal config
# scrollback_pager nvim --noplugin -u ~/.config/kitty/scrollback-pager/nvim/init.vim -c "silent write! /tmp/kitty_scrollback_buffer | te cat /tmp/kitty_scrollback_buffer - "
# with a minimal no-config
scrollback_pager nvim -c 'setlocal number norelativenumber nolist showtabline=0 foldcolumn=0|Man!' -c "autocmd VimEnter * normal G" -
#--------------------------------------------------------------------------------
# Keyboard shortcuts {{{
#--------------------------------------------------------------------------------
# For a list of key names, see: http://www.glfw.org/docs/latest/group__keys.html

# The value of kitty_mod is used as the modifier for all default shortcuts, you
# can change it in your kitty.conf to change the modifiers for all the default
# shortcuts. Default is ctrl+shift
# super is command on mac
# kitty_mod super+shift
kitty_mod super

map kitty_mod+w        quit
map kitty_mod+v paste_from_clipboard
map kitty_mod+enter no_op
map super+equal change_font_size current +1.0
map super+minus change_font_size current -1.0
map super+0 change_font_size current 0

# Font sizes {{{
map kitty_mod+equal             increase_font_size
map kitty_mod+minus             decrease_font_size
map kitty_mod+backspace         restore_font_size
# }}}

map kitty_mod+ctrl+shift+t new_tab
map ctrl+shift+e input_unicode_character
map ctrl+shift+u input_unicode_character

# open url in browser
map ctrl+super+o kitten hints
map ctrl+super+u kitten hints

# insert url
map ctrl+super+i>u kitten hints --program -
# insert word
map ctrl+super+i>w kitten hints --type word --program -
# insert line
map ctrl+super+i>l kitten hints --type line --program -
# insert path
map ctrl+super+i>p kitten hints --type path --program -
# insert hash (git commit hash)
map ctrl+super+i>h kitten hints --type hash --program -

# copy url to clip
map ctrl+super+y>u kitten hints --program @
# copy word
map ctrl+super+y>w kitten hints --type word --program @
# insert line
map ctrl+super+y>l kitten hints --type line --program @
# copy path
map ctrl+super+y>p kitten hints --type path --program @
# copy hash (git commit hash)
map ctrl+super+y>h kitten hints --type hash --program @
# }}}

# tmux bindings ------------------------------------------------------------- {{{
# NOTE/FIXME: these ALL require <C-a> as our prefix binding :cry
# ascii/hex codes: http://www.asciitable.com
map super+t send_text all \x01\x63
map super+shift+[ send_text all \x01\x70
map super+shift+] send_text all \x01\x6E
# map ctrl+shift+m send_text all \x01\x6d
map super+w send_text all \x01\x71

# NOTE: not wanting to use these anymore.. atreus62 coming and this feels bad:
map super+1 send_text all \x01\x31
map super+2 send_text all \x01\x32
map super+3 send_text all \x01\x33
map super+4 send_text all \x01\x34
map super+5 send_text all \x01\x35
map super+6 send_text all \x01\x36
map super+7 send_text all \x01\x37
map super+8 send_text all \x01\x38
map super+9 send_text all \x01\x39

map ctrl+1 send_text all \x01\x31
map ctrl+2 send_text all \x01\x32
map ctrl+3 send_text all \x01\x33
map ctrl+4 send_text all \x01\x34
map ctrl+5 send_text all \x01\x35
map ctrl+6 send_text all \x01\x36
map ctrl+7 send_text all \x01\x37
map ctrl+9 send_text all \x01\x38
map ctrl+9 send_text all \x01\x39
# }}}

# Window management {{{
# The script is a kitty taken from https://sw.kovidgoyal.net/kitty/kittens/custom.html
# map kitty_mod+space      toggle_layout stack
# map kitty_mod+enter      new_window
# map kitty_mod+q          close_window
# map kitty_mod+n>n    new_os_window

# movements for nvim in kitty, across splits (like tmux-navigate)
# REF: https://github.com/knubie/vim-kitty-navigator
# map ctrl+j kitten pass_keys.py neighboring_window bottom ctrl+j
# map ctrl+k kitten pass_keys.py neighboring_window top    ctrl+k
# map ctrl+h kitten pass_keys.py neighboring_window left   ctrl+h
# map ctrl+l kitten pass_keys.py neighboring_window right  ctrl+l
# }}}

# Tab management {{{
# map kitty_mod+n        next_tab
# map kitty_mod+v        new_tab nvim
# map kitty_mod+p        previous_tab
# map kitty_mod+c        new_tab
# map kitty_mod+x        close_tab
# map kitty_mod+.        next_layout
# map kitty_mod+alt+t    set_tab_title
# map kitty_mod+.        move_tab_forward
# }}}

# Open the kitty shell in a new window/tab/overlay/os_window to control kitty using commands.
# map kitty_mod+a         kitty_shell window
#-------------------------------------------------------------------------------
