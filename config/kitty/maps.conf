# vim:ft=kitty:fdm=marker
# --[ keymaps ] ------------------------------------------------------------ {{{
# For a list of key names, see: http://www.glfw.org/docs/latest/group__keys.html

clear_all_shortcuts yes

# The value of kitty_mod is used as the modifier for all default shortcuts, you
# can change it in your kitty.conf to change the modifiers for all the default
# shortcuts. Default is ctrl+shift
# super is command on mac
kitty_mod super+shift
map ctrl+w              no_op
map kitty_mod+enter     no_op
map kitty_mod+w         quit
map kitty_mod+v         paste_from_clipboard

map ctrl+shift+/ launch --location=hsplit --allow-remote-control kitty +kitten search.py @active-kitty-window-id
map ctrl+/ launch --type=overlay --stdin-source=@screen_scrollback fzf --no-sort --no-mouse -i
# map cmd+? launch --type=overlay "$HOME/.config/kitty/bin/kitty-maps"

# Jump words with opt+arrow
map alt+left send_text all \x1b\x62
map alt+right send_text all \x1b\x66

map cmd+, launch --cwd="$HOME/.dotfiles/config/kitty" --type=tab nvim kitty.conf
map cmd+ctrl+, load_config_file
map cmd+alt+, debug_config
map cmd+shift+, show_kitty_env_vars

map cmd+c copy_to_clipboard
map cmd+v paste_from_clipboard

map cmd+equal change_font_size  all +1.0
map cmd+plus change_font_size   all +1.0
map cmd+minus change_font_size  all -1.0
map cmd+0 change_font_size      all 0
map cmd+equal change_font_size  all 0

map cmd+d launch --location=vsplit --cwd=last_reported
map cmd+shift+d launch --location=hsplit --cwd=last_reported
map cmd+t launch --type=tab --cwd=last_reported
map cmd+shift+n launch --type=os-window --cwd=last_reported

# map cmd+k clear_terminal scrollback active

# map kitty_mod+ctrl+shift+t new_tab
# map ctrl+shift+e input_unicode_character
# map ctrl+shift+u input_unicode_character

# open url in browser
map ctrl+super+o kitten hints
map ctrl+super+u kitten hints

# custom processing
map ctrl+super+p>j kitten hints --customize-processing ~/.dotfiles/config/kitty/json-log-hint.py

# insert url
map ctrl+super+i>u kitten hints --program -
# insert word
map ctrl+super+i>w kitten hints --type word --program -
# insert line
map ctrl+super+i>l kitten hints --type line --program -
# insert path
map ctrl+super+i>p kitten hints --type path --program -
# insert hash (git commit hash)
map ctrl+super+i>h kitten hints --type hash --program -
# copy url to clip
map ctrl+super+y>u kitten hints --program @
map ctrl+super+y>w kitten hints --type word --program @
map ctrl+super+y>l kitten hints --type line --program @
map ctrl+super+y>p kitten hints --type path --program @
map ctrl+super+y>h kitten hints --type hash --program @
# }}}

map ctrl+space>ctrl+g launch --type=overlay gotop
map ctrl+space>ctrl+h launch --type=overlay htop
map ctrl+space>ctrl+s launch --type=window zsh -ic "slck"
map ctrl+space>ctrl+n launch --type=window zsh -ic "zknew"
map ctrl+space>ctrl+e launch --type=window zsh -ic "zk edit --interactive"
map ctrl+space>z launch --type=window zsh -c "zsh"
# map ctrl+space>ctrl+enter launch --type=overlay zsh -ic "~/.dotfiles/bin/kittymux"
# map ctrl+space>ctrl+enter kitten sessioner.py "~/.dotfiles/config/kitty/sessions"
map ctrl+space>ctrl+space launch --type=window kt

# map ctrl+space>ctrl+b show_scrollback
map ctrl+space>ctrl+b launch --title "kitty scrollback buffer" --stdin-source=@screen_scrollback --type=overlay nvim -c "set ft=kittybuf | TSBufEnable bash | let g:auto_session_enabled = v:false" -

map ctrl+space>ctrl+k close_tab
map ctrl+space>ctrl+x close_tab
map ctrl+space>ctrl+z toggle_layout stack
map cmd+enter toggle_maximized
map cmd+shift+enter toggle_layout stack
map ctrl+space>v launch --location=vsplit zsh

# Window management {{{
# movements for nvim in kitty, across splits (like tmux-navigate)
# REF: https://github.com/knubie/vim-kitty-navigator
map ctrl+space>j kitten pass_keys.py neighboring_window bottom ctrl+j "^.*nvim.*$"
map ctrl+space>k kitten pass_keys.py neighboring_window top    ctrl+k "^.*nvim.*$"
map ctrl+space>h kitten pass_keys.py neighboring_window left   ctrl+h "^.*nvim.*$"
map ctrl+space>l kitten pass_keys.py neighboring_window right  ctrl+l "^.*nvim.*$"

map kitty_mod+;        detach_window ask
map kitty_mod+]        next_window
map kitty_mod+[        previous_window
map kitty_mod+f        move_window_forward
map kitty_mod+z        toggle_layout stack
map super+n            launch --cwd=~/.dotfiles --type=os-window
# }}}

# Tab management {{{
action_alias           launch_tab launch --type=tab --cwd=current
map super+ctrl+l       next_tab
map super+ctrl+h       previous_tab
map super+ctrl+t       launch --cwd=~/.dotfiles --type=tab

map cmd+1 goto_tab 1
map cmd+2 goto_tab 2
map cmd+3 goto_tab 3
map cmd+4 goto_tab 4
map cmd+5 goto_tab 5
map cmd+6 goto_tab 6
map cmd+7 goto_tab 7
map cmd+8 goto_tab 8
map cmd+9 goto_tab 9

map ctrl+1 goto_tab 1
map ctrl+2 goto_tab 2
map ctrl+3 goto_tab 3
map ctrl+4 goto_tab 4
map ctrl+5 goto_tab 5
map ctrl+6 goto_tab 6
map ctrl+7 goto_tab 7
map ctrl+8 goto_tab 8
map ctrl+9 goto_tab 9

map ctrl+space>ctrl+1 goto_tab 1
map ctrl+space>ctrl+2 goto_tab 2
map ctrl+space>ctrl+3 goto_tab 3
map ctrl+space>ctrl+4 goto_tab 4
map ctrl+space>ctrl+5 goto_tab 5
map ctrl+space>ctrl+6 goto_tab 6
map ctrl+space>ctrl+7 goto_tab 7
map ctrl+space>ctrl+8 goto_tab 8
map ctrl+space>ctrl+9 goto_tab 9

# Open the kitty shell in a new window/tab/overlay/os_window to control kitty using commands.
map kitty_mod+k         kitty_shell window

