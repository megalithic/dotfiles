[user]
  name = Seth Messer
  email = seth.messer@gmail.com
  color = auto

[credential]
  helper = osxkeychain

[hub]
  protocol = https

[git]
  user = megalithic

[github]
	user = megalithic

[diff]
[difftool]
  prompt = false

[help]
  autocorrect = 1

[alias]
  aa = add --all :/
  ap = add --patch

  b = branch
  ba = branch -A
	bm = branch -m
	bd = branch -d
  #bdd = branch -D
  bbd = branch -D $1 && push origin --delete $1

  cv = commit -v
  cm = commit -m
  ca = commit --amend
  cp = commit -p

  co = checkout
  cob = checkout -b
  com = checkout master

  cl = clone

  # stash
  sshow = "!f() { git stash show stash^{/$*} -p; }; f"
  sapply = "!f() { git stash apply stash^{/$*}; }; f"

  di = diff
  dc = diff --cached
  df = diff
  ds = diff --stat=160,120

  mf = merge --ff-only
  m = merge --no-ff
  # open rebase/merge conflicted files
	fix = !sh -c "'vim `git diff --name-only --diff-filter=U`'"
	# add unmerged files (when conflicts are resolved)
	au = !sh -c "'git add `git diff --name-only --diff-filter=U`'"

  plf = pull --ff-only
  plom = pull origin master

  fa = fetch --all
  pom = push origin master

  s = status -sb
  st = status

  # git submodules
	subpull = submodule foreach git pull

  sha = name-rev --name-only --refs=refs/heads/*
  g = grep --break --heading --line-number
  gi = grep --break --heading --line-number -i
  tree = log --graph --pretty=oneline --decorate
  undo = reset --soft HEAD^
  # reset = reset --hard HEAD^

  # Divergence (commits we added and commits remote added)
  div = divergence

  # Goodness (summary of diff lines added/removed/total)
  gn = goodness
  gnc = goodness --cached

  # Fancy logging.
  #   h = head
  #   hp = head with patch
  #   r = recent commits, only current branch
  #   ra = recent commits, all reachable refs
  #   l = all commits, only current branch
  #   la = all commits, all reachable refs
  head = !git l -1
  h = !git head
  hp = "!. ~/.githelpers && show_git_head"
  r = !git l -30
  ra = !git r --all
  l = "!. ~/.githelpers && pretty_git_log"
  la = !git l --all
  lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
  last = !git log --max-count=1 | awk '{print $2}' | awk 'NR==1{print $1}'

  promote = !$DOTFILES/bin/git-promote
  wtf     = !$DOTFILES/bin/git-wtf
  rank-contributers = !$DOTFILES/bin/git-rank-contributers
  count   = !git shortlog -sn
  this = !git init && git add . && git commit -m \"Initial commit\"
  who = shortlog -s -n --no-merges
	standup = shortlog --since=yesterday
	today = shortlog --since=midnight
	uncommit = reset --soft HEAD^
	unamend = reset --soft HEAD@{1}
	subs = submodule foreach git pull origin master
	hist = for-each-ref --count=5 --sort=-committerdate --format='%(refname:short)' refs/heads/
  refresh = !ssh-add -l && STASH=$(git stash) && git fetch && git rebase origin/master && test \"$STASH\" != \"No local changes to save\" && git stash pop

[mergetool]
  prompt = true

[merge]
  tool = nvimdiff

[mergetool "nvimdiff"]
  keepBackup = false
	cmd = "nvim -d \"$LOCAL\" \"$MERGED\" \"$REMOTE\""
	trustExitCode = true

[merge "railsschema"]
  name = newer Rails schema version
  driver = "ruby -e '\n\
        system %(git), %(merge-file), %(--marker-size=%L), %(%A), %(%O), %(%B)\n\
        b = File.read(%(%A))\n\
        b.sub!(/^<+ .*\\nActiveRecord::Schema\\.define.:version => (\\d+). do\\n=+\\nActiveRecord::Schema\\.define.:version => (\\d+). do\\n>+ .*/) do\n\
          %(ActiveRecord::Schema.define(:version => #{[$1, $2].max}) do)\n\
        end\n\
        File.open(%(%A), %(w)) {|f| f.write(b)}\n\
        exit 1 if b.include?(%(<)*%L)'"

[color]
	branch = auto
	diff = auto
	status = auto
	interactive = true
  ui = true
  pager = true

[color "diff"]
  old = red strike
  new = green italic

[core]
  pager = `brew --prefix git`/share/git-core/contrib/diff-highlight/diff-highlight | less
  whitespace=fix,-indent-with-non-tab,trailing-space,cr-at-eol
	editor = env VIM_MINIMAL=1 nvim +startinsert
  excludesfile = ~/.gitignore

[apply]
  whitespace = fix
  #whitespace = nowarn

[push]
	default = current # or upstream?

[web]
  browser = open

[branch]
  autosetuprebase = always

[rebase]
	autosquash = true

[rerere]
  enabled = true
  enabled = 1
  autoupdate = true

[pager]
  #diff = diff-so-fancy | less --tabs=4 -RFX
  diff = diff-so-fancy | less --tabs=4 -RFX --pattern '^(Date|added|deleted|modified): '
	show = diff-so-fancy | less --tabs=4 -RFX
  log = diff-so-fancy | less --tab=4 -RFX

[interactive]
	diffFilter = diff-so-fancy | less --tabs=4 -RFX

[diff]
	compactionHeuristic = true
	indentHeuristic = true

[color "diff-highlight"]
	oldNormal = red bold
	oldHighlight = red bold 52
	newNormal = green bold
	newHighlight = green bold 22


# -------------------------------------------------------
# Nova Colorscheme Stuffs
[color]
  pager = true
  ui = auto
  status = auto
  diff = auto
  branch = auto
  showBranch = auto
  interactive = auto
  grep = auto
[color "status"]
  header = black bold
  branch = cyan
  nobranch = red
  unmerged = red
  untracked = cyan
  added = green
  changed = red bold
[color "diff"]
  meta = red bold
  frag = black bold
  func = blue
  old = red strike
  new = green
  commit = blue
  whitespace = red
  context = normal
[color "branch"]
  current = cyan
  local = blue
  remote = magenta
  upstream = magenta
  plain = normal
[color "decorate"]
  branch = blue
  remoteBranch = magenta
  tag = magenta
  stash = cyan
  HEAD = blue
[color "interactive"]
  prompt = red
  header = red bold
  error = red
  help = black bold
[color "grep"]
  context = normal
  match = cyan
  filename = blue
  function = blue
  selected = normal
  separator = red bold
  linenumber = normal
